import{isPromise as a}from"./utils";let b=Object.freeze({headers:{"Content-Type":"application/json"}});export const composePreHandler=async(c,d,e)=>{for(let f of c){let g=f(d,e);if(g=a(g)?await g:g)switch(typeof g){case"string":return new Response(g,{headers:d.responseHeader});case"object":try{return new Response(JSON.stringify(g),Object.assign(b,{headers:d.responseHeader}))}catch(h){throw new h}case"function":let i=g;for(let[j,k]of Object.entries(d.responseHeader))i.headers.append(j,k);return i;case"number":case"boolean":return new Response(g.toString(),{headers:d.responseHeader})}}};export const composeHandler=(a,b)=>[a,b]
//# sourceMappingURL=handler.js.map