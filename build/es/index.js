import a from"string-theocracy";import b from"fluent-schema-validator";import{composePreHandler as c,composeHandler as d}from"./handler";import{mergeHook as e,parseHeader as f,isPromise as g,clone as h}from"./utils";let i=Object.freeze({headers:{"Content-Type":"application/json"}});export default class j{#a;constructor(){this.router=new a,this.store={},this.#a=[],this.hook={onRequest:[],transform:[],preHandler:[],schema:{body:[],header:[],query:[],params:[]}},this.default(()=>new Response("Not Found",{status:404}))} #b(k,l,m,n){this.router.on(k,l,d(m,h(e(this.hook,n))))}onRequest(a){return this.hook.onRequest.push(a),this}transform(a){return this.hook.transform.push(a),this}schema(a){return a.body&&(this.hook.schema.body=this.hook.schema.body.concat(a.body)),a.header&&(this.hook.schema.body=this.hook.schema.body.concat(a.header)),a.params&&(this.hook.schema.params=this.hook.schema.body.concat(a.params)),a.query&&(this.hook.schema.query=this.hook.schema.body.concat(a.query)),this}preHandler(a){return this.hook.preHandler.push(a),this}when(a,b){switch(a){case"onRequest":this.hook.onRequest.push(b);case"transform":this.hook.transform.push(b);case"preHandler":this.hook.preHandler.push(b)}return this}group(a,b){let c=new j;return b(c),this.store=Object.assign(this.store,c.store),Object.values(c.router.routes).forEach(({method:b,path:c,handler:d})=>{this.router.on(b,`${a}/${c}`,d)}),this}guard(a,b){let c=new j;return b(c),this.store=Object.assign(this.store,c.store),c.router.routes.forEach(({method:a,path:b,handler:c})=>{this.router.on(a,b,c)}),this}use(a,b){return a(this,b)}get(a,b,c){return this.#b("GET",a,b,c),this}post(a,b,c){return this.#b("POST",a,b,c),this}put(a,b,c){return this.#b("PUT",a,b),this}patch(a,b,c){return this.#b("PATCH",a,b),this}delete(a,b,c){return this.#b("DELETE",a,b),this}options(a,b,c){return this.#b("OPTIONS",a,b),this}head(a,b,c){return this.#b("HEAD",a,b),this}trace(a,b,c){return this.#b("TRACE",a,b),this}connect(a,b,c){return this.#b("CONNECT",a,b),this}on(a,b,c,d){return this.#b(a,b,c,d),this}off(a,b){this.router.off(a,b)}default(a,b){return this.router.default(d(a,e(h(this.hook),b))),this}state(a,b){return this.store[a]=b,this}ref(a,b){return this.#a.push([a,b]),this}handle=async a=>{let d=Object.assign({},this.store);if(this.#a[0])for(let[e,h]of this.#a)d[e]="function"==typeof h?Promise.resolve(h()):h;if(this.hook.onRequest[0])for(let j of this.hook.onRequest)Promise.resolve(j(a,d));let{found:k,method:l,path:m,handler:n,params:o,query:p}=this.router.find(a.method,a.url),q,r=async()=>q||(q=await Promise.resolve(a.text().then(a=>a.startsWith("{")||a.startsWith("[")?JSON.parse(a):a))),s={request:a,params:o,query:p,headers:()=>f(a.headers),body:r,responseHeader:{}},[t,u]=n;if(!k)return t(s,d);let v=a=>c(a,s,d);if(u.transform[0]){let w=await v(u.transform);if(w)return w}if(u.schema.body[0]||u.schema.header[0]||u.schema.params[0]||u.schema.query[0]){let x=(a,c,d)=>{for(let e of d)try{let f=b(c,e);if(!f)return new Response(`Invalid ${a}`,{status:400})}catch(g){return new Response(`Unable to parse ${a}`,{status:422})}};if(u.schema.body[0]){let y=x("body",await r(),u.schema.body);if(y)return y}if(u.schema.params[0]){let z=x("params",o,u.schema.params);if(z)return z}if(u.schema.query[0]){let A=x("query",p,u.schema.query);if(A)return A}if(u.schema.header[0]){let B=x("headers",f(a.headers),u.schema.header);if(B)return B}}if(u.preHandler[0]){let C=await v(u.preHandler);if(C)return C}let D=t(s,d);switch(g(D)&&(D=await D),typeof D){case"string":return new Response(D);case"object":try{return new Response(JSON.stringify(D),Object.assign({},i,{headers:s.responseHeader}))}catch(E){throw E}case"function":let F=D;for(let[G,H]of Object.entries(s.responseHeader))F.headers.append(G,H);return F;case"number":case"boolean":return new Response(D.toString(),{headers:s.responseHeader});case"undefined":return new Response("",{headers:s.responseHeader});default:return new Response(D,{headers:s.responseHeader})}};listen(a){if(!Bun)throw Error("KINGWORLD required Bun to run");try{Bun.serve({port:a,fetch:this.handle})}catch(b){throw b}return this}};export{b as validate}
//# sourceMappingURL=index.js.map