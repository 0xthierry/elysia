"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),!function(a,b){for(var c in b)Object.defineProperty(a,c,{enumerable:!0,get:b[c]})}(exports,{default:()=>g,validate:()=>b.default});const a=e(require("string-theocracy")),b=e(require("fluent-schema-validator")),c=require("./handler"),d=require("./utils");function e(a){return a&&a.__esModule?a:{default:a}}const f=Object.freeze({headers:{"Content-Type":"application/json"}});class g{#a;constructor(){this.router=new a.default,this.store={},this.#a=[],this.hook={onRequest:[],transform:[],preHandler:[],schema:{body:[],header:[],query:[],params:[]}},this.default(()=>new Response("Not Found",{status:404}))} #b(h,i,j,k){this.router.on(h,i,(0,c.composeHandler)(j,(0,d.clone)((0,d.mergeHook)(this.hook,k))))}onRequest(a){return this.hook.onRequest.push(a),this}transform(a){return this.hook.transform.push(a),this}schema(a){return a.body&&(this.hook.schema.body=this.hook.schema.body.concat(a.body)),a.header&&(this.hook.schema.body=this.hook.schema.body.concat(a.header)),a.params&&(this.hook.schema.params=this.hook.schema.body.concat(a.params)),a.query&&(this.hook.schema.query=this.hook.schema.body.concat(a.query)),this}preHandler(a){return this.hook.preHandler.push(a),this}when(a,b){switch(a){case"onRequest":this.hook.onRequest.push(b);case"transform":this.hook.transform.push(b);case"preHandler":this.hook.preHandler.push(b)}return this}group(a,b){let c=new g;return b(c),this.store=Object.assign(this.store,c.store),Object.values(c.router.routes).forEach(({method:b,path:c,handler:d})=>{this.router.on(b,`${a}/${c}`,d)}),this}guard(a,b){let c=new g;return b(c),this.store=Object.assign(this.store,c.store),c.router.routes.forEach(({method:a,path:b,handler:c})=>{this.router.on(a,b,c)}),this}use(a,b){return a(this,b)}get(a,b,c){return this.#b("GET",a,b,c),this}post(a,b,c){return this.#b("POST",a,b,c),this}put(a,b,c){return this.#b("PUT",a,b),this}patch(a,b,c){return this.#b("PATCH",a,b),this}delete(a,b,c){return this.#b("DELETE",a,b),this}options(a,b,c){return this.#b("OPTIONS",a,b),this}head(a,b,c){return this.#b("HEAD",a,b),this}trace(a,b,c){return this.#b("TRACE",a,b),this}connect(a,b,c){return this.#b("CONNECT",a,b),this}on(a,b,c,d){return this.#b(a,b,c,d),this}off(a,b){this.router.off(a,b)}default(a,b){return this.router.default((0,c.composeHandler)(a,(0,d.mergeHook)((0,d.clone)(this.hook),b))),this}state(a,b){return this.store[a]=b,this}ref(a,b){return this.#a.push([a,b]),this}handle=async a=>{let e=Object.assign({},this.store);if(this.#a[0])for(let[g,h]of this.#a)e[g]="function"==typeof h?Promise.resolve(h()):h;if(this.hook.onRequest[0])for(let i of this.hook.onRequest)Promise.resolve(i(a,e));let{found:j,method:k,path:l,handler:m,params:n,query:o}=this.router.find(a.method,a.url),p,q=async()=>p||(p=await Promise.resolve(a.text().then(a=>a.startsWith("{")||a.startsWith("[")?JSON.parse(a):a))),r={request:a,params:n,query:o,headers:()=>(0,d.parseHeader)(a.headers),body:q,responseHeader:{}},[s,t]=m;if(!j)return s(r,e);let u=a=>(0,c.composePreHandler)(a,r,e);if(t.transform[0]){let v=await u(t.transform);if(v)return v}if(t.schema.body[0]||t.schema.header[0]||t.schema.params[0]||t.schema.query[0]){let w=(a,c,d)=>{for(let e of d)try{let f=(0,b.default)(c,e);if(!f)return new Response(`Invalid ${a}`,{status:400})}catch(g){return new Response(`Unable to parse ${a}`,{status:422})}};if(t.schema.body[0]){let x=w("body",await q(),t.schema.body);if(x)return x}if(t.schema.params[0]){let y=w("params",n,t.schema.params);if(y)return y}if(t.schema.query[0]){let z=w("query",o,t.schema.query);if(z)return z}if(t.schema.header[0]){let A=w("headers",(0,d.parseHeader)(a.headers),t.schema.header);if(A)return A}}if(t.preHandler[0]){let B=await u(t.preHandler);if(B)return B}let C=s(r,e);switch((0,d.isPromise)(C)&&(C=await C),typeof C){case"string":return new Response(C);case"object":try{return new Response(JSON.stringify(C),Object.assign({},f,{headers:r.responseHeader}))}catch(D){throw D}case"function":let E=C;for(let[F,G]of Object.entries(r.responseHeader))E.headers.append(F,G);return E;case"number":case"boolean":return new Response(C.toString(),{headers:r.responseHeader});case"undefined":return new Response("",{headers:r.responseHeader});default:return new Response(C,{headers:r.responseHeader})}};listen(a){if(!Bun)throw Error("KINGWORLD required Bun to run");try{Bun.serve({port:a,fetch:this.handle})}catch(b){throw b}return this}}
//# sourceMappingURL=index.js.map